<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Video Library</title>
    <link rel="stylesheet" href="/css/styles.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.7.2/socket.io.min.js"></script>
    <script src="/js/socket.js"></script>
</head>
<body>
    <div class="container">
        <h1>Video Library</h1>
        
        <div class="tabs">
            <div class="tab active" onclick="showTab('original')">
                Original Videos <span class="badge badge-primary"><%= videos.length %></span>
            </div>
            <div class="tab" onclick="showTab('processed')">
                Processed Videos <span class="badge badge-success"><%= processed_videos.length %></span>
            </div>
        </div>
        
        <div id="original-videos">
            <div class="video-list">
                <h2>Original Videos</h2>
                <% if (videos && videos.length > 0) { %>
                    <% let current_folder = ''; %>
                    <% for (let video of videos) { %>
                        <% let video_folder = video.split('/').slice(0, -1).join('/'); %>
                        <% if (video_folder !== current_folder) { %>
                            <div class="folder-indicator">
                                <% if (video_folder) { %>
                                    üìÅ <%= video_folder %>
                                <% } else { %>
                                    üìÅ Root Directory
                                <% } %>
                            </div>
                            <% current_folder = video_folder; %>
                        <% } %>
                        <div class="video-item">
                            <a href="/video/<%= encodeURIComponent(video) %>">
                                <%= video.split('/').pop() %>
                                <div class="video-path"><%= video %></div>
                            </a>
                        </div>
                    <% } %>
                <% } else { %>
                    <div class="no-videos">
                        <p>No video files found in the data directory.</p>
                    </div>
                <% } %>
            </div>
        </div>
        
        <div id="processed-videos" style="display: none;">
            <div class="video-list">
                <h2>Processed Videos</h2>
                <% if (processed_videos && processed_videos.length > 0) { %>
                    <% for (let video of processed_videos) { %>
                        <div class="video-item processed-item">
                            <a href="/processed/<%= encodeURIComponent(video) %>" target="_blank">
                                <%= video %>
                                <div class="video-path">output/<%= video %></div>
                            </a>
                        </div>
                    <% } %>
                <% } else { %>
                    <div class="no-videos">
                        <p>No processed videos found. Use the "Process with TAPIR" button when viewing a video to create processed versions.</p>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
    
    <script>
        function showTab(tabName) {
            // Hide all sections
            document.getElementById('original-videos').style.display = 'none';
            document.getElementById('processed-videos').style.display = 'none';
            
            // Show selected section
            document.getElementById(tabName + '-videos').style.display = 'block';
            
            // Update tab styling
            const tabs = document.querySelectorAll('.tab');
            tabs.forEach(tab => {
                tab.classList.remove('active');
                if (tab.textContent.toLowerCase().includes(tabName)) {
                    tab.classList.add('active');
                }
            });
        }
        
        // Initialize - fetch videos from backend
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                // Video data is already provided by the server when rendering the page
                // This is just to demonstrate how you could update dynamically
                const videoData = await api.getVideos();
                // Update UI with fetched data if needed
                console.log('Video data fetched:', videoData);
            } catch (error) {
                console.error('Error fetching videos:', error);
            }
        });
    </script>
</body>
</html>